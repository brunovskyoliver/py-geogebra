name: Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            suffix: -linux
            ext: ''
          - os: macos-latest
            suffix: -darwin
            ext: ''
          - os: windows-latest
            suffix: -windows
            ext: '.exe'
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller -r requirements.txt

      - name: build
        run: |
          python -m PyInstaller --onefile --noconsole --noconfirm --add-data "locales${{ runner.os == 'Windows' && ';' || ':' }}locales" --name py-geogebra${{ matrix.suffix }} main.py

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: py-geogebra${{ matrix.suffix }}
          path: dist/py-geogebra${{ matrix.suffix }}${{ matrix.ext }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Artifact
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Read version
        run: |
          echo "version=$(python -c 'import py_geogebra.tools.version as v; print(v.__version__)')" >> $GITHUB_ENV

      - name: Package macOS and Linux builds
        if: matrix.os != 'windows-latest'
        run: |
          chmod +x dist/py-geogebra*
          tar -czf dist/py-geogebra${{ matrix.suffix }}.tar.gz -C dist py-geogebra${{ matrix.suffix }}

      - name: Upload
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: "PyGeoGebra v${{ env.version }}"
          make_latest: true
          files: dist/py-geogebra${{ matrix.suffix }}${{ matrix.ext }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


